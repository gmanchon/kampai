#!/usr/bin/env python
# -*- coding: utf-8 -*-

import click
from colorama import Fore

import os


def is_cwd_within_kanpai_generated_project():

    # retrieving first commit of current working directory
    # git log --oneline returns one commit per line
    # 2>/dev/null eliminates errors but not the standard output,
    # which is read by os.popen
    # tail -1 retrieves the first commit of the git repo
    git_log_cmd = "git log --oneline 2>/dev/null " \
               " | tail -1"

    git_first_commit = os.popen(git_log_cmd).read()  # os.system(git_log_cmd)

    # checking whether first commit was performed by kanpai
    commit_signature = "kanpai üéâ üç∞"  # uniquelly identifies a kanpai project

    if commit_signature not in git_first_commit:
        print("not a git repository: %s (%s)" % (git_first_commit, git_log_cmd))

        return False

    return True


@click.group()
def greet():
    pass


@greet.command()
def fetch():  # data

    # check context: within project or within
    res = is_cwd_within_kanpai_generated_project()

    print(res)


@greet.command()
@click.option("--in", "-i", "in_file", required=True,
              help="Path to csv file to be processed.",
              type=click.Path(exists=True, dir_okay=False, readable=True))
@click.option("--out-file", "-o", default="./output.xlsx",
              help="Path to excel file to store the result.")
@click.option('--verbose', is_flag=True, help="Verbose output")
@click.option(
    "--dev", "server_url", help="Upload to dev server",
    flag_value='https://dev.server.org/api/v2/upload',
)
@click.option(
    "--test", "server_url", help="Upload to test server",
    flag_value='https://test.server.com/api/v2/upload',
)
@click.option(
    "--prod", "server_url", help="Upload to prod server",
    flag_value='https://real.server.com/api/v2/upload',
    default=True
)
def process(in_file, out_file, server_url):
    """ Processes the input file IN and stores the result to
    output file OUT.
    """

    print(Fore.GREEN + 'ok')


if __name__ == "__main__":
    greet()
